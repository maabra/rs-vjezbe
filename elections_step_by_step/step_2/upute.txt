Sjajno, krenimo korak po korak. Definirat ćemo jednostavni rječnik za pohranjivanje glasova i potrebne funkcije za glasanje i prikaz rezultata. Također ćemo definirati funkcije za simulaciju klijentskih zahtjeva.

### Korak 1: Definiranje rječnika `votes`

Unutar `index.py` datoteke, definirat ćemo rječnik `votes`:

```python
# elections/index.py

from aiohttp import web

# Rječnik za pohranjivanje glasova
votes = {
    "plavi": 0,
    "crveni": 0
}

# Funkcija za bilježenje glasova
async def glasaj(request):
    try:
        data = await request.json()
    except Exception:
        return web.json_response({"status": "nevažeći podaci"}, status=400)

    opcija = data.get("opcija")
    if opcija not in votes:
        return web.json_response({"status": "nepoznata opcija"}, status=400)

    votes[opcija] += 1
    return web.json_response({"status": "uspješno glasanje"}, status=200)

# Funkcija za prikaz trenutnih rezultata
async def trenutni_rezultati(request):
    return web.json_response(votes)

# Definiranje ruta
app = web.Application()
app.add_routes([web.post('/glasaj', glasaj)])
app.add_routes([web.get('/rezultati', trenutni_rezultati)])

if __name__ == '__main__':
    web.run_app(app, port=8080)
```

### Korak 2: Definiranje funkcija za simulaciju klijenta

Napravit ćemo funkcije za simulaciju klijentskih zahtjeva unutar `client.py` datoteke:

```python
# elections/client.py

import aiohttp
import asyncio

# Funkcija za simulaciju glasanja
async def glasaj_klijent(opcija):
    async with aiohttp.ClientSession() as session:
        async with session.post('http://localhost:8080/glasaj', json={"opcija": opcija}) as response:
            return await response.json()

# Funkcija za simulaciju prikaza rezultata
async def rezultati_klijent():
    async with aiohttp.ClientSession() as session:
        async with session.get('http://localhost:8080/rezultati') as response:
            return await response.json()

# Testiranje poslužitelja
async def main():
    print("Glasanje za 'plavi':")
    result = await glasaj_klijent('plavi')
    print(result)
    
    print("Glasanje za 'crveni':")
    result = await glasaj_klijent('crveni')
    print(result)
    
    print("Glasanje za 'nepoznata opcija':")
    result = await glasaj_klijent('zeleni')
    print(result)
    
    print("Trenutni rezultati:")
    rezultati = await rezultati_klijent()
    print(rezultati)

if __name__ == '__main__':
    asyncio.run(main())
```

### Pokretanje poslužitelja i klijenta

1. Pokrenite poslužitelj:
   ```bash
   python elections/index.py
   ```

2. Pokrenite klijenta u drugom terminalu:
   ```bash
   python elections/client.py
   ```
